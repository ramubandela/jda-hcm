apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: my-namespace
  labels:
    app: my-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      serviceAccountName: my-app-service-account
      containers:
        - name: my-app-container
          image: my-dockerhub-user/my-app:latest
          ports:
            - containerPort: 8080
          env:
            - name: APP_MODE
              value: "production"
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: my-app-config
                  key: db_host
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-app-secrets
                  key: secret_key
          volumeMounts:
            - name: app-storage
              mountPath: /data
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: secret-mount
              mountPath: /mnt/secret-bank
              readOnly: true
            - name: absence-cep-consumer-pod-logs
              mountPath: /applogs
              readOnly: false
      volumes:
        - name: app-storage
          emptyDir: {}
        - name: config-volume
          configMap:
            name: my-app-config
        - name: secret-mount
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "event-consumer-secret-provider"
        - name: absence-cep-consumer-pod-logs
          hostPath:
            path: /app/logs
            type: DirectoryOrCreate
